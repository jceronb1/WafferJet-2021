Index: app/src/main/java/com/example/u_vallet/Activity_EditarPerfil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.u_vallet;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.annotation.RequiresApi;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.Toolbar;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.drawerlayout.widget.DrawerLayout;\r\nimport androidx.navigation.NavController;\r\nimport androidx.navigation.Navigation;\r\nimport androidx.navigation.ui.AppBarConfiguration;\r\nimport androidx.navigation.ui.NavigationUI;\r\n\r\nimport android.Manifest;\r\nimport android.app.Activity;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.provider.MediaStore;\r\nimport android.util.Log;\r\nimport android.view.Menu;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.ImageView;\r\nimport android.widget.Toast;\r\n\r\nimport com.google.android.material.navigation.NavigationView;\r\n\r\nimport java.io.FileNotFoundException;\r\nimport java.io.InputStream;\r\n\r\npublic class Activity_EditarPerfil extends AppCompatActivity {\r\n\r\n    int IMAGE_PICKER_REQUEST = 1;\r\n    int REQUEST_IMAGE_CAPTURE = 2;\r\n    private AppBarConfiguration mAppBarConfiguration;\r\n    @RequiresApi(api = Build.VERSION_CODES.M)\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_editar_perfil);\r\n\r\n        permisosAndroid.requestPermission(this,  Manifest.permission.READ_EXTERNAL_STORAGE, \"\", IMAGE_PICKER_REQUEST);\r\n        permisosAndroid.requestPermission(this, Manifest.permission.CAMERA, \"\", REQUEST_IMAGE_CAPTURE);\r\n        /*if(ContextCompat.checkSelfPermission(this,Manifest.permission.READ_EXTERNAL_STORAGE != PackageManager.PERMISSION_GRANTED)){\r\n            if(ActivityCompat.)\r\n        }*/\r\n        Button botonCambiarImagen = (Button) findViewById(R.id.botonCambiarImagen);\r\n        botonCambiarImagen.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent pickImage = new Intent(Intent.ACTION_PICK);\r\n                pickImage.setType(\"image/*\");\r\n                startActivityForResult(pickImage, IMAGE_PICKER_REQUEST);\r\n            }\r\n        });\r\n        Button botonTomarFoto = (Button) findViewById(R.id.botonTomarFoto);\r\n        botonTomarFoto.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                takeImage();\r\n            }\r\n        });\r\n    }\r\n    private void takeImage() {\r\n        Intent takePictureIntent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);\r\n        startActivityForResult(takePictureIntent,REQUEST_IMAGE_CAPTURE);\r\n    }\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        ImageView image = (ImageView) findViewById(R.id.imagenFotoPerfil);\r\n        switch (requestCode) {\r\n            case 1: {\r\n                if (resultCode == RESULT_OK) {\r\n                    try {\r\n                        final Uri imageUri = data.getData();\r\n                        final InputStream imageStream = getContentResolver().openInputStream(imageUri);\r\n                        final Bitmap selectedImage = BitmapFactory.decodeStream(imageStream);\r\n                        image.setImageBitmap(selectedImage);\r\n                    } catch (FileNotFoundException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n            }\r\n            case 2: {\r\n                if (requestCode == REQUEST_IMAGE_CAPTURE && resultCode == RESULT_OK) {\r\n                    Bundle extras = data.getExtras();\r\n                    Bitmap imageBitmap = (Bitmap) extras.get(\"data\");\r\n                    image.setImageBitmap(imageBitmap);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    @Override\r\n    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {\r\n        super.onRequestPermissionsResult(requestCode, permissions, grantResults);\r\n        switch (requestCode) {\r\n            case 2: {\r\n                if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {\r\n                    Toast.makeText(this, \"Permiso Concedido\", Toast.LENGTH_SHORT).show();\r\n                } else {\r\n                    Toast.makeText(this, \"Permiso Denegado\", Toast.LENGTH_SHORT).show();\r\n                }\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public boolean onCreateOptionsMenu(Menu menu){\r\n        getMenuInflater().inflate(R.menu.activity__navegation, menu);\r\n        return true;\r\n    }\r\n\r\n    @Override\r\n    public boolean onOptionsItemSelected(MenuItem item){\r\n        int itemClicked = item.getItemId();\r\n        if(itemClicked == R.id.menuCambiarRol){\r\n            Intent intent = new Intent(this, Activity_Roles.class);\r\n            startActivity(intent);\r\n        }else if (itemClicked == R.id.menuEditarPerfil){\r\n            Intent intent = new Intent( this, Activity_EditarPerfil.class);\r\n            startActivity(intent);\r\n        }\r\n        return super.onOptionsItemSelected(item);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/u_vallet/Activity_EditarPerfil.java	(revision 67581b679fcee4465e6a839acff2f3e26f9e2f4a)
+++ app/src/main/java/com/example/u_vallet/Activity_EditarPerfil.java	(date 1619837990493)
@@ -2,28 +2,18 @@
 
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
-import androidx.annotation.RequiresApi;
 import androidx.appcompat.app.AppCompatActivity;
-import androidx.appcompat.widget.Toolbar;
 import androidx.core.app.ActivityCompat;
 import androidx.core.content.ContextCompat;
-import androidx.drawerlayout.widget.DrawerLayout;
-import androidx.navigation.NavController;
-import androidx.navigation.Navigation;
-import androidx.navigation.ui.AppBarConfiguration;
-import androidx.navigation.ui.NavigationUI;
 
 import android.Manifest;
-import android.app.Activity;
 import android.content.Intent;
 import android.content.pm.PackageManager;
 import android.graphics.Bitmap;
 import android.graphics.BitmapFactory;
 import android.net.Uri;
-import android.os.Build;
 import android.os.Bundle;
 import android.provider.MediaStore;
-import android.util.Log;
 import android.view.Menu;
 import android.view.MenuItem;
 import android.view.View;
@@ -31,55 +21,80 @@
 import android.widget.ImageView;
 import android.widget.Toast;
 
-import com.google.android.material.navigation.NavigationView;
-
 import java.io.FileNotFoundException;
 import java.io.InputStream;
 
 public class Activity_EditarPerfil extends AppCompatActivity {
 
+    private static final String[] PERMISOS = {
+            Manifest.permission.READ_EXTERNAL_STORAGE
+
+    } ;
+    private static final String[] PERMISOSCAMARA = {
+            Manifest.permission.CAMERA
+    };
     int IMAGE_PICKER_REQUEST = 1;
     int REQUEST_IMAGE_CAPTURE = 2;
-    private AppBarConfiguration mAppBarConfiguration;
-    @RequiresApi(api = Build.VERSION_CODES.M)
+
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_editar_perfil);
 
-        permisosAndroid.requestPermission(this,  Manifest.permission.READ_EXTERNAL_STORAGE, "", IMAGE_PICKER_REQUEST);
-        permisosAndroid.requestPermission(this, Manifest.permission.CAMERA, "", REQUEST_IMAGE_CAPTURE);
-        /*if(ContextCompat.checkSelfPermission(this,Manifest.permission.READ_EXTERNAL_STORAGE != PackageManager.PERMISSION_GRANTED)){
-            if(ActivityCompat.)
-        }*/
-        Button botonCambiarImagen = (Button) findViewById(R.id.botonCambiarImagen);
-        botonCambiarImagen.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                Intent pickImage = new Intent(Intent.ACTION_PICK);
-                pickImage.setType("image/*");
-                startActivityForResult(pickImage, IMAGE_PICKER_REQUEST);
-            }
-        });
-        Button botonTomarFoto = (Button) findViewById(R.id.botonTomarFoto);
-        botonTomarFoto.setOnClickListener(new View.OnClickListener() {
+        //permisosAndroid.requestPermission(this, Manifest.permission.CAMERA, "", REQUEST_IMAGE_CAPTURE);
+        //onPause();
+        //permisosAndroid.requestPermission(this,Manifest.permission.READ_EXTERNAL_STORAGE,"", IMAGE_PICKER_REQUEST);
+        Button botonSelImagen = (Button) findViewById(R.id.botonCambiarImagen);
+        if (ContextCompat.checkSelfPermission(
+                this, Manifest.permission.READ_EXTERNAL_STORAGE) ==
+                PackageManager.PERMISSION_GRANTED){
+            botonSelImagen.setOnClickListener(new View.OnClickListener() {
+                @Override
+                public void onClick(View v) {
+                    Intent pickImage = new Intent(Intent.ACTION_PICK);
+                    pickImage.setType("image/*");
+                    startActivityForResult(pickImage, IMAGE_PICKER_REQUEST);
+                }
+            });
+        }else {
+           // permisosAndroid.requestPermission(this,Manifest.permission.READ_EXTERNAL_STORAGE,"",IMAGE_PICKER_REQUEST);
+            Toast.makeText(this, "Debe conceder los permisos", Toast.LENGTH_SHORT).show();
+        }
+
+
+
+        Button botonLanzarCamara = (Button) findViewById(R.id.botonTomarFoto);
+        botonLanzarCamara.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
                 takeImage();
             }
         });
+        verificarPermisos();
+    }
+    private void verificarPermisos(){
+        int permisosgaleria = ActivityCompat.checkSelfPermission(Activity_EditarPerfil.this,Manifest.permission.READ_EXTERNAL_STORAGE);
+        int permisoscamera = ActivityCompat.checkSelfPermission(Activity_EditarPerfil.this,Manifest.permission.CAMERA);
+        if(permisosgaleria != PackageManager.PERMISSION_GRANTED){
+            ActivityCompat.requestPermissions(Activity_EditarPerfil.this, PERMISOS,1);
+        }
+        if(permisoscamera != PackageManager.PERMISSION_GRANTED){
+            ActivityCompat.requestPermissions(Activity_EditarPerfil.this, PERMISOSCAMARA,1);
+        }
     }
     private void takeImage() {
         Intent takePictureIntent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
         startActivityForResult(takePictureIntent,REQUEST_IMAGE_CAPTURE);
     }
+/*
     @Override
     protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {
         super.onActivityResult(requestCode, resultCode, data);
         ImageView image = (ImageView) findViewById(R.id.imagenFotoPerfil);
+
         switch (requestCode) {
             case 1: {
-                if (resultCode == RESULT_OK) {
+                if (requestCode == IMAGE_PICKER_REQUEST && resultCode == RESULT_OK) {
                     try {
                         final Uri imageUri = data.getData();
                         final InputStream imageStream = getContentResolver().openInputStream(imageUri);
@@ -89,6 +104,7 @@
                         e.printStackTrace();
                     }
                 }
+
             }
             case 2: {
                 if (requestCode == REQUEST_IMAGE_CAPTURE && resultCode == RESULT_OK) {
@@ -99,21 +115,29 @@
             }
         }
     }
+
     @Override
     public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {
         super.onRequestPermissionsResult(requestCode, permissions, grantResults);
         switch (requestCode) {
+            case 1: {
+                if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
+                    Toast.makeText(this, "Permiso Concedido", Toast.LENGTH_SHORT).show();
+                    Intent refresh = new Intent(this, Activity_EditarPerfil.class); startActivity(refresh);//Start the same Activity finish(); //finish Activity.
+                } else {
+                    Toast.makeText(this, "Permiso Denegado", Toast.LENGTH_SHORT).show();
+                }
+            }
             case 2: {
                 if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
                     Toast.makeText(this, "Permiso Concedido", Toast.LENGTH_SHORT).show();
                 } else {
                     Toast.makeText(this, "Permiso Denegado", Toast.LENGTH_SHORT).show();
                 }
-                return;
-            }
-        }
+            }
+        }
+        return;
     }
-
     @Override
     public boolean onCreateOptionsMenu(Menu menu){
         getMenuInflater().inflate(R.menu.activity__navegation, menu);
@@ -132,4 +156,6 @@
         }
         return super.onOptionsItemSelected(item);
     }
-}
\ No newline at end of file
+*/
+}
+
